[{"filePath":"/Users/snehalagrawal/project/be-app-wth-test-cases/src/config/db.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"max-len","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/snehalagrawal/project/be-app-wth-test-cases/src/controllers/postController.js","messages":[{"ruleId":"consistent-return","severity":2,"message":"Expected to return a value at the end of async arrow function.","line":22,"column":45,"nodeType":"ArrowFunctionExpression","messageId":"missingReturn","endLine":22,"endColumn":47},{"ruleId":"consistent-return","severity":2,"message":"Expected to return a value at the end of async arrow function.","line":35,"column":44,"nodeType":"ArrowFunctionExpression","messageId":"missingReturn","endLine":35,"endColumn":46},{"ruleId":"consistent-return","severity":2,"message":"Expected to return a value at the end of async arrow function.","line":47,"column":44,"nodeType":"ArrowFunctionExpression","messageId":"missingReturn","endLine":47,"endColumn":46}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import Post from '../models/Post';\n\nexport const createPost = async (req, res) => {\n  try {\n    const newPost = new Post(req.body);\n    const post = await newPost.save();\n    res.status(201).json(post);\n  } catch (err) {\n    res.status(400).json({ message: err.message });\n  }\n};\n\nexport const getPosts = async (req, res) => {\n  try {\n    const posts = await Post.find().populate('userId', 'name email');\n    return res.status(200).json(posts);\n  } catch (err) {\n    return res.status(500).json({ message: err.message });\n  }\n};\n\nexport const getPostById = async (req, res) => {\n  try {\n    const post = await Post.findById(req.params.id).populate(\n      'userId',\n      'name email',\n    );\n    if (!post) return res.status(404).json({ message: 'Post not found' });\n    res.status(200).json(post);\n  } catch (err) {\n    res.status(500).json({ message: err.message });\n  }\n};\n\nexport const updatePost = async (req, res) => {\n  try {\n    const post = await Post.findByIdAndUpdate(req.params.id, req.body, {\n      new: true,\n    });\n    if (!post) return res.status(404).json({ message: 'Post not found' });\n    res.status(200).json(post);\n  } catch (err) {\n    res.status(400).json({ message: err.message });\n  }\n};\n\nexport const deletePost = async (req, res) => {\n  try {\n    const post = await Post.findByIdAndDelete(req.params.id);\n    if (!post) return res.status(404).json({ message: 'Post not found' });\n    res.status(200).json({ message: 'Post deleted' });\n  } catch (err) {\n    res.status(500).json({ message: err.message });\n  }\n};\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"max-len","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/snehalagrawal/project/be-app-wth-test-cases/src/controllers/userController.js","messages":[{"ruleId":"import/extensions","severity":2,"message":"Unexpected use of file extension \"js\" for \"../models/User.js\"","line":1,"column":18,"nodeType":"Literal","endLine":1,"endColumn":37},{"ruleId":"consistent-return","severity":2,"message":"Expected to return a value at the end of async arrow function.","line":22,"column":45,"nodeType":"ArrowFunctionExpression","messageId":"missingReturn","endLine":22,"endColumn":47},{"ruleId":"consistent-return","severity":2,"message":"Expected to return a value at the end of async arrow function.","line":32,"column":44,"nodeType":"ArrowFunctionExpression","messageId":"missingReturn","endLine":32,"endColumn":46},{"ruleId":"consistent-return","severity":2,"message":"Expected to return a value at the end of async arrow function.","line":44,"column":44,"nodeType":"ArrowFunctionExpression","messageId":"missingReturn","endLine":44,"endColumn":46}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import User from '../models/User.js';\n\nexport const createUser = async (req, res) => {\n  try {\n    const newUser = new User(req.body);\n    const user = await newUser.save();\n    res.status(201).json(user);\n  } catch (err) {\n    res.status(400).json({ message: err.message });\n  }\n};\n\nexport const getUsers = async (req, res) => {\n  try {\n    const users = await User.find();\n    res.status(200).json(users);\n  } catch (err) {\n    res.status(500).json({ message: err.message });\n  }\n};\n\nexport const getUserById = async (req, res) => {\n  try {\n    const user = await User.findById(req.params.id);\n    if (!user) return res.status(404).json({ message: 'User not found' });\n    res.status(200).json(user);\n  } catch (err) {\n    res.status(500).json({ message: err.message });\n  }\n};\n\nexport const updateUser = async (req, res) => {\n  try {\n    const user = await User.findByIdAndUpdate(req.params.id, req.body, {\n      new: true,\n    });\n    if (!user) return res.status(404).json({ message: 'User not found' });\n    res.status(200).json(user);\n  } catch (err) {\n    res.status(400).json({ message: err.message });\n  }\n};\n\nexport const deleteUser = async (req, res) => {\n  try {\n    const user = await User.findByIdAndDelete(req.params.id);\n    if (!user) return res.status(404).json({ message: 'User not found' });\n    res.status(200).json({ message: 'User deleted' });\n  } catch (err) {\n    res.status(500).json({ message: err.message });\n  }\n};\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"max-len","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/snehalagrawal/project/be-app-wth-test-cases/src/docs/swagger.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"max-len","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/snehalagrawal/project/be-app-wth-test-cases/src/models/Post.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"max-len","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/snehalagrawal/project/be-app-wth-test-cases/src/models/User.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"max-len","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/snehalagrawal/project/be-app-wth-test-cases/src/routes/postRoutes.js","messages":[{"ruleId":"import/extensions","severity":2,"message":"Unexpected use of file extension \"js\" for \"../controllers/postController.js\"","line":2,"column":33,"nodeType":"Literal","endLine":2,"endColumn":67}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import express from 'express';\nimport * as postController from '../controllers/postController.js';\n\nconst router = express.Router();\n\n/**\n * @swagger\n * tags:\n *   name: Posts\n *   description: Post management and retrieval\n */\n\n/**\n * @swagger\n * /api/posts:\n *   post:\n *     summary: Create a new post\n *     tags: [Posts]\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             required:\n *               - title\n *               - body\n *               - userId\n *             properties:\n *               title:\n *                 type: string\n *               body:\n *                 type: string\n *               userId:\n *                 type: string\n *                 description: ID of the user who created the post\n *     responses:\n *       201:\n *         description: The post was successfully created\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/Post'\n *       400:\n *         description: Bad request\n */\nrouter.post('/', postController.createPost);\n\n/**\n * @swagger\n * /api/posts:\n *   get:\n *     summary: Returns the list of all posts with user details\n *     tags: [Posts]\n *     responses:\n *       200:\n *         description: The list of posts\n *         content:\n *           application/json:\n *             schema:\n *               type: array\n *               items:\n *                 $ref: '#/components/schemas/Post'\n */\nrouter.get('/', postController.getPosts);\n\n/**\n * @swagger\n * /api/posts/{id}:\n *   get:\n *     summary: Get a post by ID with user details\n *     tags: [Posts]\n *     parameters:\n *       - in: path\n *         name: id\n *         schema:\n *           type: string\n *         required: true\n *         description: The post ID\n *     responses:\n *       200:\n *         description: The post description by ID\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/Post'\n *       404:\n *         description: Post not found\n */\nrouter.get('/:id', postController.getPostById);\n\n/**\n * @swagger\n * /api/posts/{id}:\n *   put:\n *     summary: Update a post by ID\n *     tags: [Posts]\n *     parameters:\n *       - in: path\n *         name: id\n *         schema:\n *           type: string\n *         required: true\n *         description: The post ID\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             properties:\n *               title:\n *                 type: string\n *               body:\n *                 type: string\n *     responses:\n *       200:\n *         description: The post was successfully updated\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/Post'\n *       400:\n *         description: Bad request\n *       404:\n *         description: Post not found\n */\nrouter.put('/:id', postController.updatePost);\n\n/**\n * @swagger\n * /api/posts/{id}:\n *   delete:\n *     summary: Delete a post by ID\n *     tags: [Posts]\n *     parameters:\n *       - in: path\n *         name: id\n *         schema:\n *           type: string\n *         required: true\n *         description: The post ID\n *     responses:\n *       200:\n *         description: The post was successfully deleted\n *       404:\n *         description: Post not found\n */\nrouter.delete('/:id', postController.deletePost);\n\nexport default router;\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"max-len","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/snehalagrawal/project/be-app-wth-test-cases/src/routes/userRoutes.js","messages":[{"ruleId":"import/extensions","severity":2,"message":"Unexpected use of file extension \"js\" for \"../controllers/userController.js\"","line":2,"column":33,"nodeType":"Literal","endLine":2,"endColumn":67}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import express from 'express';\nimport * as userController from '../controllers/userController.js';\n\nconst router = express.Router();\n\n/**\n * @swagger\n * tags:\n *   name: Users\n *   description: User management and retrieval\n */\n\n/**\n * @swagger\n * /api/users:\n *   post:\n *     summary: Create a new user\n *     tags: [Users]\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             required:\n *               - name\n *               - email\n *             properties:\n *               name:\n *                 type: string\n *               email:\n *                 type: string\n *                 format: email\n *     responses:\n *       201:\n *         description: The user was successfully created\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/User'\n *       400:\n *         description: Bad request\n */\nrouter.post('/', userController.createUser);\n\n/**\n * @swagger\n * /api/users:\n *   get:\n *     summary: Returns the list of all users\n *     tags: [Users]\n *     responses:\n *       200:\n *         description: The list of users\n *         content:\n *           application/json:\n *             schema:\n *               type: array\n *               items:\n *                 $ref: '#/components/schemas/User'\n */\nrouter.get('/', userController.getUsers);\n\n/**\n * @swagger\n * /api/users/{id}:\n *   get:\n *     summary: Get a user by ID\n *     tags: [Users]\n *     parameters:\n *       - in: path\n *         name: id\n *         schema:\n *           type: string\n *         required: true\n *         description: The user ID\n *     responses:\n *       200:\n *         description: The user description by ID\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/User'\n *       404:\n *         description: User not found\n */\nrouter.get('/:id', userController.getUserById);\n\n/**\n * @swagger\n * /api/users/{id}:\n *   put:\n *     summary: Update a user by ID\n *     tags: [Users]\n *     parameters:\n *       - in: path\n *         name: id\n *         schema:\n *           type: string\n *         required: true\n *         description: The user ID\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             properties:\n *               name:\n *                 type: string\n *               email:\n *                 type: string\n *                 format: email\n *     responses:\n *       200:\n *         description: The user was successfully updated\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/User'\n *       400:\n *         description: Bad request\n *       404:\n *         description: User not found\n */\nrouter.put('/:id', userController.updateUser);\n\n/**\n * @swagger\n * /api/users/{id}:\n *   delete:\n *     summary: Delete a user by ID\n *     tags: [Users]\n *     parameters:\n *       - in: path\n *         name: id\n *         schema:\n *           type: string\n *         required: true\n *         description: The user ID\n *     responses:\n *       200:\n *         description: The user was successfully deleted\n *       404:\n *         description: User not found\n */\nrouter.delete('/:id', userController.deleteUser);\n\nexport default router;\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"max-len","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/snehalagrawal/project/be-app-wth-test-cases/src/server.js","messages":[{"ruleId":"import/extensions","severity":2,"message":"Unexpected use of file extension \"js\" for \"./config/db.js\"","line":3,"column":23,"nodeType":"Literal","endLine":3,"endColumn":39},{"ruleId":"import/extensions","severity":2,"message":"Unexpected use of file extension \"js\" for \"./routes/userRoutes.js\"","line":4,"column":24,"nodeType":"Literal","endLine":4,"endColumn":48},{"ruleId":"import/extensions","severity":2,"message":"Unexpected use of file extension \"js\" for \"./routes/postRoutes.js\"","line":5,"column":24,"nodeType":"Literal","endLine":5,"endColumn":48},{"ruleId":"import/order","severity":2,"message":"`swagger-ui-express` import should occur before import of `./config/db.js`","line":6,"column":1,"nodeType":"ImportDeclaration","endLine":6,"endColumn":44,"fix":{"range":[55,237],"text":"import swaggerUi from 'swagger-ui-express';\nimport connectDB from './config/db.js';\nimport userRoutes from './routes/userRoutes.js';\nimport postRoutes from './routes/postRoutes.js';\n"}},{"ruleId":"import/extensions","severity":2,"message":"Unexpected use of file extension \"js\" for \"./docs/swagger.js\"","line":7,"column":19,"nodeType":"Literal","endLine":7,"endColumn":38},{"ruleId":"import/order","severity":2,"message":"`cors` import should occur before import of `./config/db.js`","line":8,"column":1,"nodeType":"ImportDeclaration","endLine":8,"endColumn":25,"fix":{"range":[55,301],"text":"import cors from 'cors';\nimport connectDB from './config/db.js';\nimport userRoutes from './routes/userRoutes.js';\nimport postRoutes from './routes/postRoutes.js';\nimport swaggerUi from 'swagger-ui-express';\nimport specs from './docs/swagger.js';\n"}}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"import 'dotenv/config';\nimport express from 'express';\nimport connectDB from './config/db.js';\nimport userRoutes from './routes/userRoutes.js';\nimport postRoutes from './routes/postRoutes.js';\nimport swaggerUi from 'swagger-ui-express';\nimport specs from './docs/swagger.js';\nimport cors from 'cors';\n\nconst app = express();\n\n// Connect Database\nconnectDB();\n\n// Init Middleware\napp.use(express.json({ extended: false }));\napp.use(cors());\n\n// Define Routes\napp.use('/api/users', userRoutes);\napp.use('/api/posts', postRoutes);\n\n// Swagger Docs\napp.use('/api/doc', swaggerUi.serve, swaggerUi.setup(specs));\n\n// Basic root route\napp.get('/', (req, res) => res.send('Welcome to NodeAtlas API!'));\n\nconst PORT = process.env.PORT || 5000;\n\napp.listen(PORT, () => console.log(`Server started on port ${PORT}`));\n\nexport default app;\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"max-len","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/snehalagrawal/project/be-app-wth-test-cases/test/db-setup.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"max-len","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/snehalagrawal/project/be-app-wth-test-cases/test/post.test.js","messages":[{"ruleId":"import/no-named-default","severity":2,"message":"Use default import syntax to import 'chaiHttp'.","line":2,"column":21,"nodeType":"Identifier","endLine":2,"endColumn":29},{"ruleId":"import/extensions","severity":2,"message":"Unexpected use of file extension \"js\" for \"../src/server.js\"","line":3,"column":17,"nodeType":"Literal","endLine":3,"endColumn":35},{"ruleId":"import/extensions","severity":2,"message":"Unexpected use of file extension \"js\" for \"../src/models/Post.js\"","line":4,"column":18,"nodeType":"Literal","endLine":4,"endColumn":41},{"ruleId":"import/extensions","severity":2,"message":"Unexpected use of file extension \"js\" for \"../src/models/User.js\"","line":5,"column":18,"nodeType":"Literal","endLine":5,"endColumn":41},{"ruleId":"import/extensions","severity":2,"message":"Unexpected use of file extension \"js\" for \"./db-setup.js\"","line":6,"column":49,"nodeType":"Literal","endLine":6,"endColumn":64},{"ruleId":"no-underscore-dangle","severity":2,"message":"Unexpected dangling '_' in '_id'.","line":47,"column":17,"nodeType":"MemberExpression","messageId":"unexpectedUnderscore","endLine":47,"endColumn":29},{"ruleId":"no-underscore-dangle","severity":2,"message":"Unexpected dangling '_' in '_id'.","line":54,"column":51,"nodeType":"MemberExpression","messageId":"unexpectedUnderscore","endLine":54,"endColumn":63},{"ruleId":"no-underscore-dangle","severity":2,"message":"Unexpected dangling '_' in '_id'.","line":63,"column":17,"nodeType":"MemberExpression","messageId":"unexpectedUnderscore","endLine":63,"endColumn":29},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":67,"column":50,"nodeType":"BinaryExpression","messageId":"unexpectedStringConcatenation","endLine":67,"endColumn":78,"fix":{"range":[1969,1997],"text":"`/api/posts/${  testPost._id}`"}},{"ruleId":"no-underscore-dangle","severity":2,"message":"Unexpected dangling '_' in '_id'.","line":67,"column":66,"nodeType":"MemberExpression","messageId":"unexpectedUnderscore","endLine":67,"endColumn":78},{"ruleId":"no-underscore-dangle","severity":2,"message":"Unexpected dangling '_' in '_id'.","line":74,"column":48,"nodeType":"MemberExpression","messageId":"unexpectedUnderscore","endLine":74,"endColumn":60},{"ruleId":"no-underscore-dangle","severity":2,"message":"Unexpected dangling '_' in '_id'.","line":85,"column":17,"nodeType":"MemberExpression","messageId":"unexpectedUnderscore","endLine":85,"endColumn":29},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":91,"column":14,"nodeType":"BinaryExpression","messageId":"unexpectedStringConcatenation","endLine":91,"endColumn":43,"fix":{"range":[2817,2846],"text":"`/api/posts/${  savedPost._id}`"}},{"ruleId":"no-underscore-dangle","severity":2,"message":"Unexpected dangling '_' in '_id'.","line":91,"column":30,"nodeType":"MemberExpression","messageId":"unexpectedUnderscore","endLine":91,"endColumn":43},{"ruleId":"no-underscore-dangle","severity":2,"message":"Unexpected dangling '_' in '_id'.","line":111,"column":17,"nodeType":"MemberExpression","messageId":"unexpectedUnderscore","endLine":111,"endColumn":29},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":117,"column":17,"nodeType":"BinaryExpression","messageId":"unexpectedStringConcatenation","endLine":117,"endColumn":46,"fix":{"range":[3586,3615],"text":"`/api/posts/${  savedPost._id}`"}},{"ruleId":"no-underscore-dangle","severity":2,"message":"Unexpected dangling '_' in '_id'.","line":117,"column":33,"nodeType":"MemberExpression","messageId":"unexpectedUnderscore","endLine":117,"endColumn":46}],"suppressedMessages":[],"errorCount":17,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"import * as chai from 'chai';\nimport { default as chaiHttp, request } from 'chai-http';\nimport app from '../src/server.js';\nimport Post from '../src/models/Post.js';\nimport User from '../src/models/User.js';\nimport { connectTestDB, disconnectTestDB } from './db-setup.js';\n\nchai.use(chaiHttp);\nchai.should();\n\ndescribe('Posts', () => {\n  let testUser = null;\n\n  before(async () => {\n    await disconnectTestDB();\n    await connectTestDB();\n  });\n\n  after(async () => {\n    await disconnectTestDB();\n  });\n\n  beforeEach(async () => {\n    await Post.deleteMany({});\n    await User.deleteMany({});\n    const newUser = new User({\n      name: 'Test User for Post',\n      email: 'posttest@example.com',\n    });\n    testUser = await newUser.save();\n  });\n\n  describe('/GET posts', () => {\n    it('it should GET all the posts', async () => {\n      const res = await request.execute(app).get('/api/posts');\n      res.should.have.status(200);\n      res.body.should.be.a('array');\n      res.body.length.should.be.eql(0);\n    });\n  });\n\n  describe('/POST post', () => {\n    it('it should POST a post', async () => {\n      const post = {\n        title: 'Test Post',\n        body: 'This is a test post body.',\n        userId: testUser._id,\n      };\n      const res = await request.execute(app).post('/api/posts').send(post);\n      res.should.have.status(201);\n      res.body.should.be.a('object');\n      res.body.should.have.property('title').eql('Test Post');\n      res.body.should.have.property('body').eql('This is a test post body.');\n      res.body.should.have.property('userId').eql(testUser._id.toString());\n    });\n  });\n\n  describe('/GET/:id post', () => {\n    it('it should GET a post by the given id', async () => {\n      const post = new Post({\n        title: 'Test Post Get',\n        body: 'This is a test post body for get.',\n        userId: testUser._id.toString(),\n      });\n      const testPost = await post.save();\n\n      const res = await request.execute(app).get('/api/posts/' + testPost._id);\n      res.should.have.status(200);\n      res.body.should.be.a('object');\n      res.body.should.have.property('title').eql('Test Post Get');\n      res.body.should.have\n        .property('body')\n        .eql('This is a test post body for get.');\n      res.body.should.have.property('_id').eql(testPost._id.toString());\n      res.body.should.have.property('userId');\n      res.body.userId.should.have.property('name').eql(testUser.name);\n    });\n  });\n\n  describe('/PUT/:id post', () => {\n    it('it should UPDATE a post given the id', async () => {\n      const post = new Post({\n        title: 'Test Post Update',\n        body: 'This is a test post body for update.',\n        userId: testUser._id,\n      });\n      const savedPost = await post.save();\n\n      const res = await request\n        .execute(app)\n        .put('/api/posts/' + savedPost._id)\n        .send({\n          title: 'Updated Post',\n          body: 'This is an updated post body.',\n        });\n\n      res.should.have.status(200);\n      res.body.should.be.a('object');\n      res.body.should.have.property('title').eql('Updated Post');\n      res.body.should.have\n        .property('body')\n        .eql('This is an updated post body.');\n    });\n  });\n\n  describe('/DELETE/:id post', () => {\n    it('it should DELETE a post given the id', async () => {\n      const post = new Post({\n        title: 'Test Post Delete',\n        body: 'This is a test post body for delete.',\n        userId: testUser._id,\n      });\n      const savedPost = await post.save();\n\n      const res = await request\n        .execute(app)\n        .delete('/api/posts/' + savedPost._id);\n      res.should.have.status(200);\n      res.body.should.be.a('object');\n      res.body.should.have.property('message').eql('Post deleted');\n    });\n  });\n});\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"max-len","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]},{"filePath":"/Users/snehalagrawal/project/be-app-wth-test-cases/test/user.test.js","messages":[{"ruleId":"import/no-named-default","severity":2,"message":"Use default import syntax to import 'chaiHttp'.","line":2,"column":21,"nodeType":"Identifier","endLine":2,"endColumn":29},{"ruleId":"import/extensions","severity":2,"message":"Unexpected use of file extension \"js\" for \"../src/server.js\"","line":3,"column":17,"nodeType":"Literal","endLine":3,"endColumn":35},{"ruleId":"import/extensions","severity":2,"message":"Unexpected use of file extension \"js\" for \"../src/models/User.js\"","line":4,"column":18,"nodeType":"Literal","endLine":4,"endColumn":41},{"ruleId":"import/extensions","severity":2,"message":"Unexpected use of file extension \"js\" for \"./db-setup.js\"","line":5,"column":49,"nodeType":"Literal","endLine":5,"endColumn":64},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":56,"column":50,"nodeType":"BinaryExpression","messageId":"unexpectedStringConcatenation","endLine":56,"endColumn":79,"fix":{"range":[1544,1573],"text":"`/api/users/${  savedUser._id}`"}},{"ruleId":"no-underscore-dangle","severity":2,"message":"Unexpected dangling '_' in '_id'.","line":56,"column":66,"nodeType":"MemberExpression","messageId":"unexpectedUnderscore","endLine":56,"endColumn":79},{"ruleId":"no-underscore-dangle","severity":2,"message":"Unexpected dangling '_' in '_id'.","line":61,"column":48,"nodeType":"MemberExpression","messageId":"unexpectedUnderscore","endLine":61,"endColumn":61},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":75,"column":14,"nodeType":"BinaryExpression","messageId":"unexpectedStringConcatenation","endLine":75,"endColumn":43,"fix":{"range":[2192,2221],"text":"`/api/users/${  savedUser._id}`"}},{"ruleId":"no-underscore-dangle","severity":2,"message":"Unexpected dangling '_' in '_id'.","line":75,"column":30,"nodeType":"MemberExpression","messageId":"unexpectedUnderscore","endLine":75,"endColumn":43},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":98,"column":17,"nodeType":"BinaryExpression","messageId":"unexpectedStringConcatenation","endLine":98,"endColumn":46,"fix":{"range":[2875,2904],"text":"`/api/users/${  savedUser._id}`"}},{"ruleId":"no-underscore-dangle","severity":2,"message":"Unexpected dangling '_' in '_id'.","line":98,"column":33,"nodeType":"MemberExpression","messageId":"unexpectedUnderscore","endLine":98,"endColumn":46}],"suppressedMessages":[],"errorCount":11,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"import * as chai from 'chai';\nimport { default as chaiHttp, request } from 'chai-http';\nimport app from '../src/server.js';\nimport User from '../src/models/User.js';\nimport { connectTestDB, disconnectTestDB } from './db-setup.js';\n\nchai.use(chaiHttp);\nchai.should();\n\ndescribe('Users', () => {\n  before(async () => {\n    await disconnectTestDB();\n    await connectTestDB();\n  });\n\n  after(async () => {\n    await disconnectTestDB();\n  });\n\n  beforeEach(async () => {\n    await User.deleteMany({});\n  });\n\n  describe('/GET users', () => {\n    it('it should GET all the users', async () => {\n      const res = await request.execute(app).get('/api/users');\n      res.should.have.status(200);\n      res.body.should.be.a('array');\n      res.body.length.should.be.eql(0);\n    });\n  });\n\n  describe('/POST user', () => {\n    it('it should POST a user', async () => {\n      const user = {\n        name: 'Test User',\n        email: 'test@example.com',\n      };\n\n      const res = await request.execute(app).post('/api/users').send(user);\n      res.should.have.status(201);\n      res.body.should.be.a('object');\n      res.body.should.have.property('name').eql('Test User');\n      res.body.should.have.property('email').eql('test@example.com');\n    });\n  });\n\n  describe('/GET/:id user', () => {\n    it('it should GET a user by the given id', async () => {\n      const user = new User({\n        name: 'Test User Get',\n        email: 'get@example.com',\n      });\n      const savedUser = await user.save();\n\n      const res = await request.execute(app).get('/api/users/' + savedUser._id);\n      res.should.have.status(200);\n      res.body.should.be.a('object');\n      res.body.should.have.property('name').eql('Test User Get');\n      res.body.should.have.property('email').eql('get@example.com');\n      res.body.should.have.property('_id').eql(savedUser._id.toString());\n    });\n  });\n\n  describe('/PUT/:id user', () => {\n    it('it should UPDATE a user given the id', async () => {\n      const user = new User({\n        name: 'Test User Update',\n        email: 'update@example.com',\n      });\n      const savedUser = await user.save();\n\n      const res = await request\n        .execute(app)\n        .put('/api/users/' + savedUser._id)\n        .send({\n          name: 'Updated User',\n          email: 'updated@example.com',\n        });\n\n      res.should.have.status(200);\n      res.body.should.be.a('object');\n      res.body.should.have.property('name').eql('Updated User');\n      res.body.should.have.property('email').eql('updated@example.com');\n    });\n  });\n\n  describe('/DELETE/:id user', () => {\n    it('it should DELETE a user given the id', async () => {\n      const user = new User({\n        name: 'Test User Delete',\n        email: 'delete@example.com',\n      });\n      const savedUser = await user.save();\n\n      const res = await request\n        .execute(app)\n        .delete('/api/users/' + savedUser._id);\n      res.should.have.status(200);\n      res.body.should.be.a('object');\n      res.body.should.have.property('message').eql('User deleted');\n    });\n  });\n});\n","usedDeprecatedRules":[{"ruleId":"indent","replacedBy":[]},{"ruleId":"arrow-parens","replacedBy":[]},{"ruleId":"arrow-spacing","replacedBy":[]},{"ruleId":"generator-star-spacing","replacedBy":[]},{"ruleId":"no-confusing-arrow","replacedBy":[]},{"ruleId":"rest-spread-spacing","replacedBy":[]},{"ruleId":"template-curly-spacing","replacedBy":[]},{"ruleId":"yield-star-spacing","replacedBy":[]},{"ruleId":"array-bracket-spacing","replacedBy":[]},{"ruleId":"block-spacing","replacedBy":[]},{"ruleId":"brace-style","replacedBy":[]},{"ruleId":"comma-dangle","replacedBy":[]},{"ruleId":"comma-spacing","replacedBy":[]},{"ruleId":"comma-style","replacedBy":[]},{"ruleId":"computed-property-spacing","replacedBy":[]},{"ruleId":"eol-last","replacedBy":[]},{"ruleId":"function-call-argument-newline","replacedBy":[]},{"ruleId":"func-call-spacing","replacedBy":[]},{"ruleId":"function-paren-newline","replacedBy":[]},{"ruleId":"implicit-arrow-linebreak","replacedBy":[]},{"ruleId":"key-spacing","replacedBy":[]},{"ruleId":"keyword-spacing","replacedBy":[]},{"ruleId":"linebreak-style","replacedBy":[]},{"ruleId":"lines-between-class-members","replacedBy":[]},{"ruleId":"lines-around-directive","replacedBy":["padding-line-between-statements"]},{"ruleId":"max-len","replacedBy":[]},{"ruleId":"new-parens","replacedBy":[]},{"ruleId":"newline-per-chained-call","replacedBy":[]},{"ruleId":"no-mixed-operators","replacedBy":[]},{"ruleId":"no-mixed-spaces-and-tabs","replacedBy":[]},{"ruleId":"no-multiple-empty-lines","replacedBy":[]},{"ruleId":"no-new-object","replacedBy":["no-object-constructor"]},{"ruleId":"no-spaced-func","replacedBy":["func-call-spacing"]},{"ruleId":"no-tabs","replacedBy":[]},{"ruleId":"no-trailing-spaces","replacedBy":[]},{"ruleId":"no-whitespace-before-property","replacedBy":[]},{"ruleId":"nonblock-statement-body-position","replacedBy":[]},{"ruleId":"object-curly-spacing","replacedBy":[]},{"ruleId":"object-curly-newline","replacedBy":[]},{"ruleId":"object-property-newline","replacedBy":[]},{"ruleId":"one-var-declaration-per-line","replacedBy":[]},{"ruleId":"operator-linebreak","replacedBy":[]},{"ruleId":"padded-blocks","replacedBy":[]},{"ruleId":"quote-props","replacedBy":[]},{"ruleId":"quotes","replacedBy":[]},{"ruleId":"semi","replacedBy":[]},{"ruleId":"semi-spacing","replacedBy":[]},{"ruleId":"semi-style","replacedBy":[]},{"ruleId":"space-before-blocks","replacedBy":[]},{"ruleId":"space-before-function-paren","replacedBy":[]},{"ruleId":"space-in-parens","replacedBy":[]},{"ruleId":"space-infix-ops","replacedBy":[]},{"ruleId":"space-unary-ops","replacedBy":[]},{"ruleId":"spaced-comment","replacedBy":[]},{"ruleId":"switch-colon-spacing","replacedBy":[]},{"ruleId":"template-tag-spacing","replacedBy":[]},{"ruleId":"global-require","replacedBy":[]},{"ruleId":"no-buffer-constructor","replacedBy":[]},{"ruleId":"no-new-require","replacedBy":[]},{"ruleId":"no-path-concat","replacedBy":[]},{"ruleId":"no-extra-semi","replacedBy":[]},{"ruleId":"dot-location","replacedBy":[]},{"ruleId":"no-floating-decimal","replacedBy":[]},{"ruleId":"no-multi-spaces","replacedBy":[]},{"ruleId":"no-return-await","replacedBy":[]},{"ruleId":"wrap-iife","replacedBy":[]}]}]